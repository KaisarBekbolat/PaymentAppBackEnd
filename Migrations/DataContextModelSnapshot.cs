// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PaymentProject.Models;

#nullable disable

namespace PaymentProject.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PaymentProject.Models.CardInfo", b =>
                {
                    b.Property<long>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("CardId"));

                    b.Property<string>("CVCNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExpirationDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CardId");

                    b.ToTable("CardInfos");
                });

            modelBuilder.Entity("PaymentProject.Models.Operator", b =>
                {
                    b.Property<long>("OperatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("OperatorId"));

                    b.Property<string>("OperatorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OperatorPrefixesJson")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("OperatorPrefixesJson");

                    b.HasKey("OperatorId");

                    b.HasIndex("OperatorName")
                        .IsUnique();

                    b.ToTable("PhoneOperators");
                });

            modelBuilder.Entity("PaymentProject.Models.Payment", b =>
                {
                    b.Property<long>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<long>("CardInfoId")
                        .HasColumnType("bigint");

                    b.Property<long>("OperatorId")
                        .HasColumnType("bigint");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("PaymentId");

                    b.HasIndex("CardInfoId");

                    b.HasIndex("OperatorId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("PaymentProject.Models.Payment", b =>
                {
                    b.HasOne("PaymentProject.Models.CardInfo", "Card")
                        .WithMany()
                        .HasForeignKey("CardInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaymentProject.Models.Operator", "Operator")
                        .WithMany()
                        .HasForeignKey("OperatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Operator");
                });
#pragma warning restore 612, 618
        }
    }
}
